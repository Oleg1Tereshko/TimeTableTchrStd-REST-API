Розробити Appointment API для онлайн університету, в якому буде 2 ролі: викладач та студент.

Викладач:
- може вказувати коли і скільки часу він доступний для індивідуальних занять
- може вказувати ціну за певну к-сть часу. Наприклад 15 хв коштують 30$, 30 хв = 55$, 60 хв = 100$
- може підтверджувати або відхиляти участь студентів (approve/decline)

Студент:
- може зарезервувати певний час
- може скасувати резервацію

Система повинна мати:
REST Api Апі для викладача
REST Api Апі для студента
Логіку та Валідацію даних
Збереження даних в БД

Мінімально необхідні валідації даних:
Чи поля об’єкта не пусті
Чи dateFrom < dateTo
Чи вже такий тайм слот (проміжок часу) є в БД
Чи є в БД тайм слот який перетинається в часі з іншим тайм слотом

Технічний стек:
Java 8
Spring Boot 2.2.* (Security, MVC, Data Jpa)PostgreSQL 10.6
Maven 3.6.*
(зірочки означають що кінцева версія може варіюватись - Spring Boot 2.2.4 або Spring Boot 2.2.6)

Який має бути фінальний результат?
Робоча система, з документацію по її запуску та налаштуванню
Термін на виконання 2 тижні


Що якщо не встигаю виконати завдання?
Варіант а) кажеш скільки тобі ще потрібно часу на виконання завдання, якщо час підтверджено то продовжуєш виконання
Варіант б) скидаєш ті напрацювання які є, і ми їх оцінюємо

Чи потрібен графічний клієнт / client side / front end?
Ні, графічного клієнта не потрібно, тільки REST Api

Додатковий функціонал (не є обов'язковим, але додає “балів” при оцінці завдання):
Надсилання емейлів користувачам при реєстрації
Надсилання емейлів викладачеві з посиланнями для approve/decline студента
Надсилання емейлів студентові з посиланням для відміни зарезервованого заняття
Swagger, Open API



Документація по запуску і налаштуванні проекта

Проект написаний на Java 11.0.5.
В проекті реалізовані всі зазначені вище обов'язкові задачі і валідації, крім додаткового функціоналу.
Для розробки і тестування даного проекту використовувалася Intellij Idea.

1.Щоб перевірти проект необхідно запустити сервер та залогінитися в DB PostgreSQL. Далі відкрити і запустити проект
 Intellij Idea. Коли проект запуститься відкрити application.properties і встановити свій логін і пароль для PostgreSQL:

   spring.datasource.username=postgres -так лишається
   spring.datasource.password=password - свій пароль входу в БД.

2.В Intellij Idea зайти в закладку TooLs/ HTTP client/ TestRestfull Web Service.
В даному вікні необхідно вказати  URL запиту: http://localhost:8080/шлях..
Для простоти тестування було сворено крім REST Api Апі для викладача і REST Api Апі для студента ще RESTAdmin.
Тому для заповнення таблиці в базі даних використовуємо його URLи:

Для Admn:
Metod POST:
/admn/id/delete - видалення запису з БД.
/admn/create - створити запис: Задати параметри id,teacher_name,subject,tchrFreTimFrom,tchrFreTimTo,
                student_name,price_perhour$,stddateFrom,stddateTo,tchrstatus,stdstatus.
Щоб запобігти небажаним проблемам параметри tchrFreTimFrom,tchrFreTimTo,stddateFrom,stddateTo додати до списку та
не задавати значення.
Поля Enum встановити наступним чином:
price_perhour$: 1 - ціна за 15хв.
                2 - ціна за 30хв.
                3 - ціна за 1годину.
                будь-яка інша - ціну не встановлено.
tchrstatus,stdstatus: 0 - declined.
                      1 - approve.
                       будь-яка інша notselect.

 Час записувати в точно такому форматі: yyyy-mm-dd hh:mm (2020-08-10 12:00).

Для тествання REST Api  для викладача:
Metod GET:
/tchr/viewall - Переглянути всі записи в БД.
/tchr/id/find - пошук запису по id.

Metod POST:
/tchr/id/update - Задати параметри: id,teacher_name,tchrFreTimFrom,tchrFreTimTo,price_perhour$,tchrstatus.

Параметри tchrFreTimFrom,tchrFreTimTo перевіряються за допомогою методів:
TchrSlot - перевірка на
                Чи вже такий тайм слот (проміжок часу) є в БД
                Чи є в БД тайм слот який перетинається в часі з іншим тайм слотом
Dateequalstchr -  перевірка на  чи tchrFreTimFrom < tchrdateTo.

 Для тествання REST Api для студента:

 Metod GET:
 /std/viewall - Переглянути всі записи в БД.
 /std/id/find - пошук запису по id.

 Metod POST:
 /std/id/update - Задати параметри: id,student_name,stddateFrom,stddateTo,stdstatus.
 StdSlot- перевірка на
                Чи вже такий тайм слот (проміжок часу) є в БД
                Чи є в БД тайм слот який перетинається в часі з іншим тайм слотом
  StdTchrSlot-  перевірка на чи існує такий тайм слот у вілниму часі викладача.Якщо так встановити
  DateequalsStd - перевірка на  чи  stddateFr < stddateToo.

